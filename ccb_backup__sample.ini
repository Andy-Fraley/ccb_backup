# ccb_backup utility configuration file.
#
# Fill out and rename this file to ccb_backup.ini.  Do NOT store ccb_backup.ini file to anywhere insecure as it
# will contain sensitive user/password info.
#
# Edit values in this file to control ccb_backup retrieval utilities (get_individuals.py, get_groups.py,
# get_attendance.py, get_pledges.py, get_contributions.py) as well as the ccb_backup.py backup utility itself.
# Any values for username's and password's below provided on command-line take precedent and override values provided
# in this configuration file. And values provided on command-line to ccb_backup.py utility are passed automatically
# via command-line to sub-utilities used to retrieve data (get_individuals.py, get_groups.py,
# get_attendance.py, get_pledges.py, get_contributions.py).


# All utilities (ccb_backup.py, get_individuals.py, get_groups.py, get_attendance.py, get_pledges.py,
# get_contributions.py) do logging as they encounter Informational ("Info"), Warning, or Error situations.
# Specify minimum severity to log below:  Info, Warning, or Error
[logging]
level=Info


# The CCB app username/password provided below must have app read access privileges for: all individuals, all groups,
# all events, all transactions, all pledges, all calendars...basically read-only admin.
#
# The CCB API username/password provided below must have API read access privileges for: all individuals, all groups,
# all events, all transactions, all pledges, all calendars...basically read-only admin.  Under CCB's System
# Settings | API menu, you create new API user with all privileges EXCEPT '_update' and '_insert' privilege names
# and use that API user account below.
#
# The CCB subdomain would be XYZ if the URL you use to access your CCB account is XYZ.ccbchurch.com.
[ccb]
app_username=
app_password=
api_username=
api_password=
subdomain=


# The ccb_backup.py utility creates a ZIP file with retrieved CSVs for all individuals, groups + members,
# events + attendance, pledges, and transactions (contributions).  Because these CSVs contain sensitive data it
# is highly recommended that a passworded ZIP file be created.  To create password ZIP files during backup, specify
# password below. If section/key below are deleted or left blank, ZIP file backup will have have no password.
[zip_file]
password=


# The ccb_backup.py utility can push created ZIP file to a passworded AWS S3 bucket for secure remote backup.
# To push to S3, set push_to_s3 to True and specify AWS S3 bucket URL where ZIP file is to be stored, and password
# to the bucket. The delete_zip directive, True or False, determines whether ZIP file created is deleted after
# it is pushed to AWS S3.
[aws_s3_bucket]
push_to_s3=True
url=
password=
delete_zip=False
